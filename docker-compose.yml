version: "3"

services:
  elasticsearch:
    image: elasticsearch:1.3.9
    ports:
      - 3003:9200
    expose: ["9200"]

  etherpad:
    image: etherpad/etherpad
    ports:
      - 3004:9001
#    volumes:
#      - ./settings.json:/opt/etherpad/settings.json
    depends_on:
      - etherpad-db

  etherpad-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "etherpad"
      POSTGRES_PASSWORD: "etherpad"
    ports:
      - 3005:5432
    expose: ["5432"]

  ethercalc:
    image: audreyt/ethercalc:latest
    container_name: "ethercalc"
    ports:
      - 3006:80
    expose: ["80"]
    depends_on:
      - redis

  redis:
    image: redis
    volumes: ["./redis:/data"]
    command: redis-server --appendonly yes

  rocketchat:
    image: rocketchat/rocket.chat:latest
    command: bash -c 'for i in `seq 1 30`; do node main.js && s=$$? && break || s=$$?; echo "Tried $$i times. Waiting 5 secs..."; sleep 5; done; (exit $$s)'
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://smtp.email
#       - HTTP_PROXY=http://proxy.domain.com
#       - HTTPS_PROXY=http://proxy.domain.com
    depends_on:
      - mongo
    ports:
      - 3000:3000
    labels:
      - "traefik.backend=rocketchat"
      - "traefik.frontend.rule=Host: your.domain.tld"

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
     - ./data/db:/data/db
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    labels:
      - "traefik.enable=false"

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.0
    command: 'bash -c "for i in `seq 1 30`; do mongo mongo/rocketchat --eval \"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\" && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"'
    depends_on:
      - mongo

  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    image: rocketchat/hubot-rocketchat:latest
    restart: unless-stopped
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=GENERAL
      - ROCKETCHAT_USER=bot
      - ROCKETCHAT_PASSWORD=botpassword
      - BOT_NAME=bot
  # you can add more scripts as you'd like here, they need to be installable by npm
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    depends_on:
      - rocketchat
    labels:
      - "traefik.enable=false"
    volumes:
      - ./scripts:/home/hubot/scripts
  # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    ports:
      - 3002:8080

  web:
    build: .
    command: ["./docker-entrypoint.sh"]
    volumes:
      - .:/code
      - ./devops/settings_docker.py:/code/devops/settings.py
    ports:
      - "8000:8000"
    depends_on:
      - web-db
      - elasticsearch
      - etherpad
      - ethercalc
      - rocketchat

  web-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 3001:5432
    expose: ["5432"]